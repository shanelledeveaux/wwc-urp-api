// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WwcUrpApi.Models;

namespace wwcurpapi.Migrations
{
    [DbContext(typeof(UrpContext))]
    partial class UrpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WwcUrpApi.Models.Accomplishment", b =>
                {
                    b.Property<int>("AccomplishmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int?>("PersonId");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Type");

                    b.Property<int>("Year");

                    b.HasKey("AccomplishmentId");

                    b.HasIndex("PersonId");

                    b.ToTable("Accomplishment");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EndYear");

                    b.Property<string>("FieldOfStudy");

                    b.Property<string>("Institution");

                    b.Property<int?>("LocationId");

                    b.Property<int?>("PersonId");

                    b.Property<int>("StartYear");

                    b.HasKey("EducationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Employment", b =>
                {
                    b.Property<int>("EmploymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<int>("EndYear");

                    b.Property<string>("Job");

                    b.Property<string>("Notes");

                    b.Property<int?>("PersonId");

                    b.Property<int>("StartYear");

                    b.HasKey("EmploymentId");

                    b.HasIndex("PersonId");

                    b.ToTable("Employment");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Home", b =>
                {
                    b.Property<int>("HomeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EndYear");

                    b.Property<int?>("LocationId");

                    b.Property<int?>("PersonId");

                    b.Property<int>("StartYear");

                    b.HasKey("HomeId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Home");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryAbbreviation");

                    b.Property<string>("CountryCommonName");

                    b.Property<string>("CountryFullName");

                    b.Property<string>("MetroArea");

                    b.Property<string>("RegionAbbreviation");

                    b.Property<string>("RegionDescription");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("WwcUrpApi.Models.OtherAssociation", b =>
                {
                    b.Property<int>("OtherAssociationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("EndYear");

                    b.Property<int?>("LocationId");

                    b.Property<string>("Name");

                    b.Property<int?>("PersonId");

                    b.Property<int>("StartYear");

                    b.Property<string>("Type");

                    b.HasKey("OtherAssociationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PersonId");

                    b.ToTable("OtherAssociation");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BirthYear");

                    b.Property<string>("CommonName");

                    b.Property<int>("DeathYear");

                    b.Property<string>("Description");

                    b.Property<string>("FullName");

                    b.Property<string>("Notes");

                    b.Property<int?>("PronounId");

                    b.HasKey("PersonId");

                    b.HasIndex("PronounId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Pronoun", b =>
                {
                    b.Property<int>("PronounId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Object");

                    b.Property<string>("Posessive");

                    b.Property<string>("Subject");

                    b.HasKey("PronounId");

                    b.ToTable("Pronoun");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Accomplishment", b =>
                {
                    b.HasOne("WwcUrpApi.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Education", b =>
                {
                    b.HasOne("WwcUrpApi.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("WwcUrpApi.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Employment", b =>
                {
                    b.HasOne("WwcUrpApi.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Home", b =>
                {
                    b.HasOne("WwcUrpApi.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("WwcUrpApi.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WwcUrpApi.Models.OtherAssociation", b =>
                {
                    b.HasOne("WwcUrpApi.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("WwcUrpApi.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WwcUrpApi.Models.Person", b =>
                {
                    b.HasOne("WwcUrpApi.Models.Pronoun", "Pronoun")
                        .WithMany()
                        .HasForeignKey("PronounId");
                });
#pragma warning restore 612, 618
        }
    }
}
